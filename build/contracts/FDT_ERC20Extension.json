{
  "contractName": "FDT_ERC20Extension",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "contract IERC20",
          "name": "_fundsToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundsDistributed",
          "type": "uint256"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundsWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "accumulativeFundsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
<<<<<<< HEAD
=======
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x355274ea"
    },
    {
      "constant": false,
>>>>>>> origin/master
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fundsToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fundsTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "withdrawableFundsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "withdrawnFundsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateFundsReceived",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payToContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contract IERC20\",\"name\":\"_fundsToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundsDistributed\",\"type\":\"uint256\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundsWithdrawn\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"accumulativeFundsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fundsTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payToContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateFundsReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawableFundsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"withdrawnFundsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"accumulativeFundsOf(address)\":{\"details\":\"accumulativeFundsOf(_owner) = withdrawableFundsOf(_owner) + withdrawnFundsOf(_owner) = (pointsPerShare * balanceOf(_owner) + pointsCorrection[_owner]) / pointsMultiplier\",\"params\":{\"_owner\":\"The address of a token holder.\"},\"return\":\"The amount of funds that `_owner` has earned in total.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}.      * Requirements:      * - the caller must have the {MinterRole}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"updateFundsReceived()\":{\"details\":\"Calls _updateFundsTokenBalance(), whereby the contract computes the delta of the previous and the new  funds token balance and increments the total received funds (cumulative) by delta by calling _registerFunds()\"},\"withdrawableFundsOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"return\":\"The amount funds that `_owner` can withdraw.\"},\"withdrawnFundsOf(address)\":{\"params\":{\"_owner\":\"The address of a token holder.\"},\"return\":\"The amount of funds that `_owner` has withdrawn.\"}}},\"userdoc\":{\"methods\":{\"accumulativeFundsOf(address)\":{\"notice\":\"prev. accumulativeDividendOfView the amount of funds that an address has earned in total.\"},\"payToContract()\":{\"notice\":\"Pay fundsToken to contract Front end should call fundsToken contract to approve transfer - https://ethereum.stackexchange.com/questions/57286/make-function-payable-for-a-specific-erc20-token https://ethereum.stackexchange.com/questions/30527/smart-contract-to-receive-tokens-and-give-ether/30532\"},\"updateFundsReceived()\":{\"notice\":\"Register a payment of funds in tokens. May be called directly after a deposit is made.\"},\"withdrawFunds()\":{\"notice\":\"Withdraws available funds for user.\"},\"withdrawableFundsOf(address)\":{\"notice\":\"prev. withdrawableDividendOfView the amount of funds that an address can withdraw.\"},\"withdrawnFundsOf(address)\":{\"notice\":\"prev. withdrawnDividendOfView the amount of funds that an address has withdrawn.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Gary/funds-distribution-token-custom/contracts/FDT_ERC20Extension.sol\":\"FDT_ERC20Extension\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Gary/funds-distribution-token-custom/contracts/FDT_ERC20Extension.sol\":{\"keccak256\":\"0x9b0b8c9fbd84b20d22c6f2ad4e3b5ed167be31381b997c53586d2380d6294105\",\"urls\":[\"bzz-raw://dd7dff41dfeb20cd78cbe1ff21e57812dc3aa0df93ac36f931220013bd51bb2f\",\"dweb:/ipfs/QmQYQLP4pFKQQbioKKFZgCKiePjoWgXkoybEUaYFKiD5Xc\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/FundsDistributionToken.sol\":{\"keccak256\":\"0x02c2cc57f03a57e4417d56568728d69b95c5b8c8c914479d368536ecd72581e1\",\"urls\":[\"bzz-raw://d9e4eeed77c126540cc90ad17979ef33b00877cde33a98294032f64196780322\",\"dweb:/ipfs/QmRmKekJhWUp7KEkvud7JnCiq38wLA4oF3mLycCpQDnorW\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/IFundsDistributionToken.sol\":{\"keccak256\":\"0xe6a8062dbb957a996752bb65e566060d61b16cfa71a95a7c88c2528c8e361e29\",\"urls\":[\"bzz-raw://890db0e42e243f8a09b8b7cb503166112091b6d139a5addfcf7f32e1f026418c\",\"dweb:/ipfs/QmYMmAvsiGPWQm9kGrbpNZkmFZ2MsiK1NzN82YWPfwGzAv\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/GSN/Context.sol\":{\"keccak256\":\"0x37dc42902efc7989706ffda571ab420f0996a264641ca19c4013c4c267fa083e\",\"urls\":[\"bzz-raw://f165415343a5e04282dd155221fbbaa2f30010016556da422c139509d6abdf3d\",\"dweb:/ipfs/QmY5JGt78QvuEboDrxxvKXjEbzsa3hx1RyKouxoEm8sxSz\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/access/MinterRole.sol\":{\"keccak256\":\"0xbbb2e9faa3f22e29e0ab6e23440bf54b4bb93d7111e699ba29ad38567279fd4f\",\"urls\":[\"bzz-raw://51816f7d05882404bc0dcfb13c99e7cce9fd39d6f3a8f8885534118e25da72d8\",\"dweb:/ipfs/QmZnfmDrZ8HnTnC4Lt8f9WT5DX3Qv6Q1YZCHVY3xa8HxrE\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/access/Roles.sol\":{\"keccak256\":\"0x09f299873ffba456a5f47d822cfb0a58eb7d0b4aad05abf0ff49522b28f06374\",\"urls\":[\"bzz-raw://34e532480b34ecf7fc1c5bb3aa6ed73688b62f8ec2a03fff69ae68eed0bf6b24\",\"dweb:/ipfs/QmTqGNyVvqjj6n8WGXtBjTF15k7YBa4o2ZtUeHDqFNNxGZ\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/math/SafeMath.sol\":{\"keccak256\":\"0x04bde68e78aa525ff5b6c43a5af030d9446ac8d192927cf3c64600e893381034\",\"urls\":[\"bzz-raw://3b7c3ce008e555520198630ea5516853cf03c0c3cc0c639c8e99b192b68e4a7e\",\"dweb:/ipfs/QmezvSYqBG1VYiFBQtoqQ9k6AcexuETt9hnVYcDqvQUnJ9\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/math/SafeMathInt.sol\":{\"keccak256\":\"0x2aedb3ad40e2af6938f9e417f4d4787170f656402180e5d7f8649568fb0ba7b1\",\"urls\":[\"bzz-raw://19c290ed3d7405b380cb54f428737d7e760a531561a4d6ffba642997e59a3bba\",\"dweb:/ipfs/QmcdsjArk8efFRsGcLM6gmuWVoFPhNi4qJFokSKJzAS78X\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/math/SafeMathUint.sol\":{\"keccak256\":\"0x7cb41d3ecec4f7b96282f37e1d9310cb5069b34d6f5d313afe78c53aa61d296f\",\"urls\":[\"bzz-raw://2900c2e8b3f4f30d5a59f3a79bdc4cb7c6e59945ec8519217bc8b6f92fe38063\",\"dweb:/ipfs/QmNjWPwTtqRUYj1rM1qpJezies4eLMXAcfVitDtMbT3DCT\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/tokens/ERC20.sol\":{\"keccak256\":\"0x7280d818991cb51916edd2b4141f916609317028f5ef959ba73b98d0124c2093\",\"urls\":[\"bzz-raw://a65001f46994e1ce298a7f7c9651b9aef967c1980ef16870a8377e6a7375e559\",\"dweb:/ipfs/QmQz5yfaitEBkkTtJyFwjCYP3mQmn2zbDkLpVKrBpzBcw6\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/tokens/ERC20Detailed.sol\":{\"keccak256\":\"0x28e916f72e8002b88b787363eb43a07aabcf218cdd7335111cc117dab3a818a0\",\"urls\":[\"bzz-raw://ea6e7b02a24136e39788a0af49ba32c793a59315d24e0ad6a414b6000e48f75b\",\"dweb:/ipfs/QmbbExKYSRUGj4xtQmmWo3Yq7AkbvPJP3cN5QYqwbLCAoi\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/tokens/ERC20Mintable.sol\":{\"keccak256\":\"0x763c9dbae1d76a5fc7bfc59050c53e56bbd39707e01a7ffa1faa596f11bd74ef\",\"urls\":[\"bzz-raw://b00038d89fa0bbec39f836be628ff262ee6e9ae3bf2be31a5a644aa09740f155\",\"dweb:/ipfs/QmXirvpbvWoAaWn9HASE18BSHi41EzTtsLLBfyLo7iZh3N\"]},\"/C/Users/Gary/funds-distribution-token-custom/contracts/external/tokens/IERC20.sol\":{\"keccak256\":\"0x0026edc82e7b911c32cad4b1a320a13d728d969c78e02707a98ca1afd73564d0\",\"urls\":[\"bzz-raw://ff2cdc716c32001731c4c28b1687a16210787ea9008fc9ccd367e8d5851bf6d4\",\"dweb:/ipfs/QmXfUbLczdXB1EGbH8LQjjUNbh3PpsxuTscXasYPxjxaCJ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "201:2915:0:-;;;683:276;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:276:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;683:276:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;683:276:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;683:276:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;683:276:0;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;683:276:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;807:4;813:6;1505:4:1;1511:6;1519:2;530:4:12;522:5;:12;;;;;;;;;;;;:::i;:::-;;555:6;545:7;:16;;;;;;;;;;;;:::i;:::-;;584:8;572:9;;:20;;;;;;;;;;;;;;;;;;433:167;;;328:24:6;339:12;:10;;;:12;;:::i;:::-;328:10;;;:24;;:::i;:::-;1410:118:1;;869:1:0;837:34;;845:11;837:34;;;;829:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;943:11;930:10;;:24;;;;;;;;;;;;;;;;;;683:276;;;201:2915;;806:98:5;851:15;886:10;879:17;;806:98;:::o;816:122:6:-;873:21;886:7;873:8;:12;;;;;;:21;;;;:::i;:::-;922:7;910:20;;;;;;;;;;;;816:122;:::o;274:178:7:-;352:18;356:4;362:7;352:3;;;:18;;:::i;:::-;351:19;343:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:4;417;:11;;:20;429:7;417:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:178;;:::o;810:203::-;882:4;926:1;907:21;;:7;:21;;;;899:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:4;:11;;:20;997:7;985:20;;;;;;;;;;;;;;;;;;;;;;;;;978:27;;810:203;;;;:::o;201:2915:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "201:2915:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;201:2915:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3704:110:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3704:110:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;670:83:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;670:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:152:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2574:152:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1595:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3198:304;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3198:304:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1025:251:0;;;:::i;:::-;;2859:250;;;:::i;:::-;;1522:83:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3911:210:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3911:210:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;512:143:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:143:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3328:146:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3328:146:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2349:172:0;;;:::i;:::-;;4243:213:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4243:213:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;405:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1749:110:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1749:110:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;872:87:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;872:87:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:92:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;629:92:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;729:79;;;:::i;:::-;;4624:261:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4624:261:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2072:158;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:158:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;497:32:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;512:109:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:109:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2293:134:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2293:134:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3704:110:1;3766:7;3787:14;:22;3802:6;3787:22;;;;;;;;;;;;;;;;3780:29;;3704:110;;;:::o;670:83:12:-;707:13;740:5;733:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:83;:::o;2574:152:11:-;2640:4;2657:39;2666:12;:10;:12::i;:::-;2680:7;2689:6;2657:8;:39::i;:::-;2714:4;2707:11;;2574:152;;;;:::o;1595:91::-;1639:7;1666:12;;1659:19;;1595:91;:::o;3198:304::-;3287:4;3304:36;3314:6;3322:9;3333:6;3304:9;:36::i;:::-;3351:121;3360:6;3368:12;:10;:12::i;:::-;3382:89;3420:6;3382:89;;;;;;;;;;;;;;;;;:11;:19;3394:6;3382:19;;;;;;;;;;;;;;;:33;3402:12;:10;:12::i;:::-;3382:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3351:8;:121::i;:::-;3490:4;3483:11;;3198:304;;;;;:::o;1025:251:0:-;1071:25;1099:18;:16;:18::i;:::-;1071:46;;1134:10;;;;;;;;;;;:19;;;1154:10;1166:17;1134:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1134:50:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1134:50:0;;;;;;;;;;;;;;;;1126:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:26;:24;:26::i;:::-;;1025:251;:::o;2859:250::-;2961:1;2911:10;;;;;;;;;;;:20;;;2932:10;2952:4;2911:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2911:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2911:47:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2911:47:0;;;;;;;;;;;;;;;;:51;2903:60;;;;;;2968:14;2985:10;;;;;;;;;;;:20;;;3006:10;3026:4;2985:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2985:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2985:47:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2985:47:0;;;;;;;;;;;;;;;;2968:64;;3045:10;;;;;;;;;;;:23;;;3069:10;3089:4;3096:6;3045:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3045:58:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3045:58:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3045:58:0;;;;;;;;;;;;;;;;3037:67;;;;;;2859:250;:::o;1522:83:12:-;1563:5;1588:9;;;;;;;;;;;1581:16;;1522:83;:::o;3911:210:11:-;3991:4;4008:83;4017:12;:10;:12::i;:::-;4031:7;4040:50;4079:10;4040:11;:25;4052:12;:10;:12::i;:::-;4040:25;;;;;;;;;;;;;;;:34;4066:7;4040:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4008:8;:83::i;:::-;4109:4;4102:11;;3911:210;;;;:::o;512:143:13:-;586:4;409:22:6;418:12;:10;:12::i;:::-;409:8;:22::i;:::-;401:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:22:13;609:7;618:6;603:5;:22::i;:::-;643:4;636:11;;512:143;;;;:::o;3328:146:1:-;3393:7;3414:55;3446:14;:22;3461:6;3446:22;;;;;;;;;;;;;;;;3414:27;3434:6;3414:19;:27::i;:::-;:31;;:55;;;;:::i;:::-;3407:62;;3328:146;;;:::o;2349:172:0:-;2394:15;2412:26;:24;:26::i;:::-;2394:44;;2460:1;2449:8;:12;2445:72;;;2469:42;2486:24;:8;:22;:24::i;:::-;2469:16;:42::i;:::-;2445:72;2349:172;:::o;4243:213:1:-;4308:7;1248:6;4329:103;:87;4391:16;:24;4408:6;4391:24;;;;;;;;;;;;;;;;4329:52;:37;4348:17;4358:6;4348:9;:17::i;:::-;4329:14;;:18;;:37;;;;:::i;:::-;:50;:52::i;:::-;:61;;:87;;;;:::i;:::-;:101;:103::i;:::-;:122;;;;;;4322:129;;4243:213;;;:::o;405:24:0:-;;;;;;;;;;;;;:::o;1749:110:11:-;1806:7;1833:9;:18;1843:7;1833:18;;;;;;;;;;;;;;;;1826:25;;1749:110;;;:::o;872:87:12:-;911:13;944:7;937:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:87;:::o;629:92:6:-;409:22;418:12;:10;:12::i;:::-;409:8;:22::i;:::-;401:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:19;705:7;694:10;:19::i;:::-;629:92;:::o;729:79::-;773:27;787:12;:10;:12::i;:::-;773:13;:27::i;:::-;729:79::o;4624:261:11:-;4709:4;4726:129;4735:12;:10;:12::i;:::-;4749:7;4758:96;4797:15;4758:96;;;;;;;;;;;;;;;;;:11;:25;4770:12;:10;:12::i;:::-;4758:25;;;;;;;;;;;;;;;:34;4784:7;4758:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4726:8;:129::i;:::-;4873:4;4866:11;;4624:261;;;;:::o;2072:158::-;2141:4;2158:42;2168:12;:10;:12::i;:::-;2182:9;2193:6;2158:9;:42::i;:::-;2218:4;2211:11;;2072:158;;;;:::o;497:32:0:-;;;;:::o;512:109:6:-;568:4;592:21;605:7;592:8;:12;;:21;;;;:::i;:::-;585:28;;512:109;;;:::o;2293:134:11:-;2365:7;2392:11;:18;2404:5;2392:18;;;;;;;;;;;;;;;:27;2411:7;2392:27;;;;;;;;;;;;;;;;2385:34;;2293:134;;;;:::o;806:98:5:-;851:15;886:10;879:17;;806:98;:::o;7555:338:11:-;7666:1;7649:19;;:5;:19;;;;7641:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7747:1;7728:21;;:7;:21;;;;7720:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7831:6;7801:11;:18;7813:5;7801:18;;;;;;;;;;;;;;;:27;7820:7;7801:27;;;;;;;;;;;;;;;:36;;;;7869:7;7853:32;;7862:5;7853:32;;;7878:6;7853:32;;;;;;;;;;;;;;;;;;7555:338;;;:::o;4743:322:1:-;4817:32;4833:4;4839:2;4843:5;4817:15;:32::i;:::-;4856:21;4880:40;:25;4899:5;4880:14;;:18;;:25;;;;:::i;:::-;:38;:40::i;:::-;4856:64;;4950:42;4977:14;4950:16;:22;4967:4;4950:22;;;;;;;;;;;;;;;;:26;;:42;;;;:::i;:::-;4925:16;:22;4942:4;4925:22;;;;;;;;;;;;;;;:67;;;;5020:40;5045:14;5020:16;:20;5037:2;5020:20;;;;;;;;;;;;;;;;:24;;:40;;;;:::i;:::-;4997:16;:20;5014:2;4997:20;;;;;;;;;;;;;;;:63;;;;4743:322;;;;:::o;1901:192:8:-;1987:7;2020:1;2015;:6;;2023:12;2007:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2007:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:9;2063:1;2059;:5;2047:17;;2084:1;2077:8;;;1901:192;;;;;:::o;2784:316:1:-;2830:7;2844:29;2876:31;2896:10;2876:19;:31::i;:::-;2844:63;;2944:53;2975:21;2944:14;:26;2959:10;2944:26;;;;;;;;;;;;;;;;:30;;:53;;;;:::i;:::-;2915:14;:26;2930:10;2915:26;;;;;;;;;;;;;;;:82;;;;3026:10;3011:49;;;3038:21;3011:49;;;;;;;;;;;;;;;;;;3074:21;3067:28;;;2784:316;:::o;1511:493:0:-;1565:6;1578:29;1610:17;;1578:49;;1656:10;;;;;;;;;;;:20;;;1685:4;1656:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1656:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1656:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1656:35:0;;;;;;;;;;;;;;;;1636:17;:55;;;;1726:17;;1702:21;:41;1698:296;;;1758:60;1799:17;;1765:21;1758:33;;:60;;;;:::i;:::-;1751:67;;;;;1698:296;1860:21;1840:17;;:41;1836:158;;;1896:60;1933:21;1903:17;;1896:29;;:60;;;;:::i;:::-;1889:67;;;;;1836:158;1987:1;1980:8;;;1511:493;;:::o;859:181:8:-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o;5318:208:1:-;5379:27;5391:7;5400:5;5379:11;:27::i;:::-;5441:80;5477:42;5478:25;5497:5;5478:14;;:18;;:25;;;;:::i;:::-;5477:40;:42::i;:::-;5441:16;:25;5458:7;5441:25;;;;;;;;;;;;;;;;:34;;:80;;;;:::i;:::-;5413:16;:25;5430:7;5413:25;;;;;;;;;;;;;;;:108;;;;5318:208;;:::o;1315:136:8:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;1303:117:9:-;1359:7;1388:1;1383;:6;;1375:15;;;;;;1412:1;1397:17;;1303:117;;;:::o;2289:315:1:-;2368:1;2352:13;:11;:13::i;:::-;:17;2344:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:1;2440:5;:9;2436:164;;;2474:74;2529:13;:11;:13::i;:::-;2499:27;1248:6;2499:5;:9;;:27;;;;:::i;:::-;:43;;;;;;2474:14;;:18;;:74;;;;:::i;:::-;2457:14;:91;;;;2576:10;2559:35;;;2588:5;2559:35;;;;;;;;;;;;;;;;;;2436:164;2289:315;:::o;2344:471:8:-;2402:7;2652:1;2647;:6;2643:47;;;2677:1;2670:8;;;;2643:47;2702:9;2718:1;2714;:5;2702:17;;2747:1;2742;2738;:5;;;;;;:10;2730:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2806:1;2799:8;;;2344:471;;;;;:::o;152:134:10:-;208:6;223:8;241:1;223:20;;263:1;258;:6;;250:15;;;;;;279:1;272:8;;;152:134;;;:::o;1135:162:9:-;1191:6;1206:8;1221:1;1217;:5;1206:16;;1243:1;1238;:6;;:16;;;;;1253:1;1248;:6;;1238:16;1237:38;;;;1264:1;1260;:5;:14;;;;;1273:1;1269;:5;1260:14;1237:38;1229:47;;;;;;1290:1;1283:8;;;1135:162;;;;:::o;816:122:6:-;873:21;886:7;873:8;:12;;:21;;;;:::i;:::-;922:7;910:20;;;;;;;;;;;;816:122;:::o;946:130::-;1006:24;1022:7;1006:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;946:130;:::o;810:203:7:-;882:4;926:1;907:21;;:7;:21;;;;899:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:4;:11;;:20;997:7;985:20;;;;;;;;;;;;;;;;;;;;;;;;;978:27;;810:203;;;;:::o;5375:471:11:-;5491:1;5473:20;;:6;:20;;;;5465:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5575:1;5554:23;;:9;:23;;;;5546:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5650;5672:6;5650:71;;;;;;;;;;;;;;;;;:9;:17;5660:6;5650:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5630:9;:17;5640:6;5630:17;;;;;;;;;;;;;;;:91;;;;5755:32;5780:6;5755:9;:20;5765:9;5755:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5732:9;:20;5742:9;5732:20;;;;;;;;;;;;;;;:55;;;;5820:9;5803:35;;5812:6;5803:35;;;5831:6;5803:35;;;;;;;;;;;;;;;;;;5375:471;;;:::o;976:153:9:-;1032:6;1061:1;1056;:6;;:20;;;;;1075:1;1070;1066;:5;:10;;1056:20;1055:46;;;;1086:1;1082;:5;:18;;;;;1099:1;1095;1091;:5;:9;1082:18;1055:46;1047:55;;;;;;1122:1;1118;:5;1111:12;;976:153;;;;:::o;6127:308:11:-;6222:1;6203:21;;:7;:21;;;;6195:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6288:24;6305:6;6288:12;;:16;;:24;;;;:::i;:::-;6273:12;:39;;;;6344:30;6367:6;6344:9;:18;6354:7;6344:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6323:9;:18;6333:7;6323:18;;;;;;;;;;;;;;;:51;;;;6411:7;6390:37;;6407:1;6390:37;;;6420:6;6390:37;;;;;;;;;;;;;;;;;;6127:308;;:::o;274:178:7:-;352:18;356:4;362:7;352:3;:18::i;:::-;351:19;343:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:4;417;:11;;:20;429:7;417:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:178;;:::o;532:183::-;612:18;616:4;622:7;612:3;:18::i;:::-;604:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:5;679:4;:11;;:20;691:7;679:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;532:183;;:::o",
=======
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200389d3803806200389d833981018060405260608110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b828101905060208101848111156200006757600080fd5b81518560018202830111640100000000821117156200008557600080fd5b50509291906020018051640100000000811115620000a257600080fd5b82810190506020810184811115620000b957600080fd5b8151856001820283011164010000000082111715620000d757600080fd5b505092919060200180519060200190929190505050828260648282600082600090805190602001906200010c92919062000b40565b5081600190805190602001906200012592919062000b40565b5080600260006101000a81548160ff021916908360ff16021790555050505062000176620001616200032b640100000000026401000000009004565b62000333640100000000026401000000009004565b600081111515620001ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f45524332304361707065643a206361702069732030000000000000000000000081525060200191505060405180910390fd5b8060078190555050620002133360646200039d640100000000026401000000009004565b5050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620002e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001807f4644545f4552433230457874656e73696f6e3a20494e56414c49445f46554e4481526020017f535f544f4b454e5f41444452455353000000000000000000000000000000000081525060400191505060405180910390fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000bef565b600033905090565b62000357816006620004a864010000000002620028d4179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620003bd8282620005976401000000000262002833176401000000009004565b6200046162000404620003ea83600854620006706401000000000262002162179091906401000000009004565b62000741640100000000026200222f176401000000009004565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200076164010000000002620027f1179091906401000000009004565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b620004c38282620007a7640100000000026401000000009004565b15151562000539576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600754620005d582620005b8620008cb640100000000026401000000009004565b620008d56401000000000262001e66179091906401000000009004565b111515156200064c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b6200066c8282620009606401000000000262002ab3176401000000009004565b5050565b6000808314156200068557600090506200073b565b600082840290508284828115156200069957fe5b0414151562000736576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b600080829050600081121515156200075857600080fd5b80915050919050565b60008082121580156200077657508282840313155b806200079057506000821280156200078f575082828403135b5b15156200079c57600080fd5b818303905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562000874576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600554905090565b600080828401905083811015151562000956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562000a06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000a2b81600554620008d56401000000000262001e66179091906401000000009004565b60058190555062000a9381600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620008d56401000000000262001e66179091906401000000009004565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000b8357805160ff191683800117855562000bb4565b8280016001018555821562000bb4579182015b8281111562000bb357825182559160200191906001019062000b96565b5b50905062000bc3919062000bc7565b5090565b62000bec91905b8082111562000be857600081600090555060010162000bce565b5090565b90565b612c9e8062000bff6000396000f3fe60806040526004361061013d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806241c52c1461014257806306fdde03146101a7578063095ea7b31461023757806318160ddd146102aa57806323b872dd146102d557806324600fc3146103685780632aaf6af81461037f578063313ce56714610396578063355274ea146103c757806339509351146103f257806340c10f1914610465578063443bb293146104d857806346c162de1461053d5780634e97415f1461055457806363f04b15146105b957806370a082311461061057806395d89b4114610675578063983b2d56146107055780639865027514610756578063a457c2d71461076d578063a9059cbb146107e0578063a9691f3f14610853578063aa271e1a1461087e578063dd62ed3e146108e7575b600080fd5b34801561014e57600080fd5b506101916004803603602081101561016557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061096c565b6040518082815260200191505060405180910390f35b3480156101b357600080fd5b506101bc6109b5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101fc5780820151818401526020810190506101e1565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024357600080fd5b506102906004803603604081101561025a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a57565b604051808215151515815260200191505060405180910390f35b3480156102b657600080fd5b506102bf610a75565b6040518082815260200191505060405180910390f35b3480156102e157600080fd5b5061034e600480360360608110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b34801561037457600080fd5b5061037d610b9c565b005b34801561038b57600080fd5b50610394610d4e565b005b3480156103a257600080fd5b506103ab6110f6565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103d357600080fd5b506103dc61110d565b6040518082815260200191505060405180910390f35b3480156103fe57600080fd5b5061044b6004803603604081101561041557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611117565b604051808215151515815260200191505060405180910390f35b34801561047157600080fd5b506104be6004803603604081101561048857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111ca565b604051808215151515815260200191505060405180910390f35b3480156104e457600080fd5b50610527600480360360208110156104fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128a565b6040518082815260200191505060405180910390f35b34801561054957600080fd5b506105526112ed565b005b34801561056057600080fd5b506105a36004803603602081101561057757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611317565b6040518082815260200191505060405180910390f35b3480156105c557600080fd5b506105ce6113ba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061c57600080fd5b5061065f6004803603602081101561063357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113e0565b6040518082815260200191505060405180910390f35b34801561068157600080fd5b5061068a611429565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106ca5780820151818401526020810190506106af565b50505050905090810190601f1680156106f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561071157600080fd5b506107546004803603602081101561072857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114cb565b005b34801561076257600080fd5b5061076b611581565b005b34801561077957600080fd5b506107c66004803603604081101561079057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611593565b604051808215151515815260200191505060405180910390f35b3480156107ec57600080fd5b506108396004803603604081101561080357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a4565b604051808215151515815260200191505060405180910390f35b34801561085f57600080fd5b506108686116c2565b6040518082815260200191505060405180910390f35b34801561088a57600080fd5b506108cd600480360360208110156108a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c8565b604051808215151515815260200191505060405180910390f35b3480156108f357600080fd5b506109566004803603604081101561090a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e5565b6040518082815260200191505060405180910390f35b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4d5780601f10610a2257610100808354040283529160200191610a4d565b820191906000526020600020905b815481529060010190602001808311610a3057829003601f168201915b5050505050905090565b6000610a6b610a6461176c565b8484611774565b6001905092915050565b6000600554905090565b6000610a8c8484846119f5565b610b9184610a9861176c565b610b8c85606060405190810160405280602881526020017f45524332303a207472616e7366657220616d6f756e742065786365656473206181526020017f6c6c6f77616e6365000000000000000000000000000000000000000000000000815250600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b4261176c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b519092919063ffffffff16565b611774565b600190509392505050565b6000610ba6611c13565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c6d57600080fd5b505af1158015610c81573d6000803e3d6000fd5b505050506040513d6020811015610c9757600080fd5b81019080805190602001909291905050501515610d42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4644545f4552433230457874656e73696f6e2e776974686472617746756e647381526020017f3a205452414e534645525f4641494c454400000000000000000000000000000081525060400191505060405180910390fd5b610d4a611d0b565b5050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610e3f57600080fd5b505afa158015610e53573d6000803e3d6000fd5b505050506040513d6020811015610e6957600080fd5b8101908080519060200190929190505050111515610e8657600080fd5b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610f7757600080fd5b505afa158015610f8b573d6000803e3d6000fd5b505050506040513d6020811015610fa157600080fd5b81019080805190602001909291905050509050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050506040513d60208110156110d757600080fd5b810190808051906020019092919050505015156110f357600080fd5b50565b6000600260009054906101000a900460ff16905090565b6000600754905090565b60006111c061112461176c565b846111bb856004600061113561176c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b611774565b6001905092915050565b60006111dc6111d761176c565b6116c8565b1515611276576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6112808383611ef0565b6001905092915050565b60006112e6600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d884611317565b611faf90919063ffffffff16565b9050919050565b60006112f7611d0b565b905060008113156113145761131361130e82611ff9565b612012565b5b50565b60007001000000000000000000000000000000006113a96113a4600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611396611391611380886113e0565b60085461216290919063ffffffff16565b61222f565b61224e90919063ffffffff16565b611ff9565b8115156113b257fe5b049050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c15780601f10611496576101008083540402835291602001916114c1565b820191906000526020600020905b8154815290600101906020018083116114a457829003601f168201915b5050505050905090565b6114db6114d661176c565b6116c8565b1515611575576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b61157e81612292565b50565b61159161158c61176c565b6122ec565b565b600061169a6115a061176c565b8461169585606060405190810160405280602581526020017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781526020017f207a65726f0000000000000000000000000000000000000000000000000000008152506004600061160e61176c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b519092919063ffffffff16565b611774565b6001905092915050565b60006116b86116b161176c565b84846119f5565b6001905092915050565b600c5481565b60006116de82600661234690919063ffffffff16565b9050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561183f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561190a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b611a00838383612469565b6000611a1f611a1a8360085461216290919063ffffffff16565b61222f565b9050611a7381600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224e90919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b0881600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127f190919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60008383111582901515611c00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bc5578082015181840152602081019050611baa565b50505050905090810190601f168015611bf25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080611c1f3361128a565b9050611c7381600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040518082815260200191505060405180910390a28091505090565b600080600c549050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611dce57600080fd5b505afa158015611de2573d6000803e3d6000fd5b505050506040513d6020811015611df857600080fd5b8101908080519060200190929190505050600c81905550600c54811115611e3657611e2e600c54826127f190919063ffffffff16565b915050611e63565b80600c541115611e5d57611e5581600c546127f190919063ffffffff16565b915050611e63565b60009150505b90565b6000808284019050838110151515611ee6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611efa8282612833565b611f68611f1a611f158360085461216290919063ffffffff16565b61222f565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127f190919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000611ff183836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b51565b905092915050565b600080821215151561200a57600080fd5b819050919050565b600061201c610a75565b1115156120b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001807f46756e6473446973747269627574696f6e546f6b656e2e5f646973747269627581526020017f746546756e64733a20535550504c595f49535f5a45524f00000000000000000081525060400191505060405180910390fd5b600081111561215f5761210a6120cb610a75565b6120ef7001000000000000000000000000000000008461216290919063ffffffff16565b8115156120f857fe5b04600854611e6690919063ffffffff16565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167f26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd826040518082815260200191505060405180910390a25b50565b6000808314156121755760009050612229565b6000828402905082848281151561218857fe5b04141515612224576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b6000808290506000811215151561224557600080fd5b80915050919050565b6000808284019050600083121580156122675750838112155b8061227d575060008312801561227c57508381125b5b151561228857600080fd5b8091505092915050565b6122a68160066128d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6123008160066129b190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612534576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156125ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6126af81606060405190810160405280602681526020017f45524332303a207472616e7366657220616d6f756e742065786365656473206281526020017f616c616e63650000000000000000000000000000000000000000000000000000815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b519092919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061274481600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080821215801561280557508282840313155b8061281d575060008212801561281c575082828403135b5b151561282857600080fd5b818303905092915050565b60075461285082612842610a75565b611e6690919063ffffffff16565b111515156128c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b6128d08282612ab3565b5050565b6128de8282612346565b151515612953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6129bb8282612346565b1515612a55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c81526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612b58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b612b6d81600554611e6690919063ffffffff16565b600581905550612bc581600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fea165627a7a72305820c2d6feb330958046eddbe75df58d6b7c66eb8eb725dfd1197da5a2176620d6e80029",
  "deployedBytecode": "0x60806040526004361061013d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806241c52c1461014257806306fdde03146101a7578063095ea7b31461023757806318160ddd146102aa57806323b872dd146102d557806324600fc3146103685780632aaf6af81461037f578063313ce56714610396578063355274ea146103c757806339509351146103f257806340c10f1914610465578063443bb293146104d857806346c162de1461053d5780634e97415f1461055457806363f04b15146105b957806370a082311461061057806395d89b4114610675578063983b2d56146107055780639865027514610756578063a457c2d71461076d578063a9059cbb146107e0578063a9691f3f14610853578063aa271e1a1461087e578063dd62ed3e146108e7575b600080fd5b34801561014e57600080fd5b506101916004803603602081101561016557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061096c565b6040518082815260200191505060405180910390f35b3480156101b357600080fd5b506101bc6109b5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101fc5780820151818401526020810190506101e1565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024357600080fd5b506102906004803603604081101561025a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a57565b604051808215151515815260200191505060405180910390f35b3480156102b657600080fd5b506102bf610a75565b6040518082815260200191505060405180910390f35b3480156102e157600080fd5b5061034e600480360360608110156102f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b34801561037457600080fd5b5061037d610b9c565b005b34801561038b57600080fd5b50610394610d4e565b005b3480156103a257600080fd5b506103ab6110f6565b604051808260ff1660ff16815260200191505060405180910390f35b3480156103d357600080fd5b506103dc61110d565b6040518082815260200191505060405180910390f35b3480156103fe57600080fd5b5061044b6004803603604081101561041557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611117565b604051808215151515815260200191505060405180910390f35b34801561047157600080fd5b506104be6004803603604081101561048857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111ca565b604051808215151515815260200191505060405180910390f35b3480156104e457600080fd5b50610527600480360360208110156104fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061128a565b6040518082815260200191505060405180910390f35b34801561054957600080fd5b506105526112ed565b005b34801561056057600080fd5b506105a36004803603602081101561057757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611317565b6040518082815260200191505060405180910390f35b3480156105c557600080fd5b506105ce6113ba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061c57600080fd5b5061065f6004803603602081101561063357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113e0565b6040518082815260200191505060405180910390f35b34801561068157600080fd5b5061068a611429565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106ca5780820151818401526020810190506106af565b50505050905090810190601f1680156106f75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561071157600080fd5b506107546004803603602081101561072857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114cb565b005b34801561076257600080fd5b5061076b611581565b005b34801561077957600080fd5b506107c66004803603604081101561079057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611593565b604051808215151515815260200191505060405180910390f35b3480156107ec57600080fd5b506108396004803603604081101561080357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116a4565b604051808215151515815260200191505060405180910390f35b34801561085f57600080fd5b506108686116c2565b6040518082815260200191505060405180910390f35b34801561088a57600080fd5b506108cd600480360360208110156108a157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116c8565b604051808215151515815260200191505060405180910390f35b3480156108f357600080fd5b506109566004803603604081101561090a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e5565b6040518082815260200191505060405180910390f35b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4d5780601f10610a2257610100808354040283529160200191610a4d565b820191906000526020600020905b815481529060010190602001808311610a3057829003601f168201915b5050505050905090565b6000610a6b610a6461176c565b8484611774565b6001905092915050565b6000600554905090565b6000610a8c8484846119f5565b610b9184610a9861176c565b610b8c85606060405190810160405280602881526020017f45524332303a207472616e7366657220616d6f756e742065786365656473206181526020017f6c6c6f77616e6365000000000000000000000000000000000000000000000000815250600460008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610b4261176c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b519092919063ffffffff16565b611774565b600190509392505050565b6000610ba6611c13565b9050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c6d57600080fd5b505af1158015610c81573d6000803e3d6000fd5b505050506040513d6020811015610c9757600080fd5b81019080805190602001909291905050501515610d42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f4644545f4552433230457874656e73696f6e2e776974686472617746756e647381526020017f3a205452414e534645525f4641494c454400000000000000000000000000000081525060400191505060405180910390fd5b610d4a611d0b565b5050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610e3f57600080fd5b505afa158015610e53573d6000803e3d6000fd5b505050506040513d6020811015610e6957600080fd5b8101908080519060200190929190505050111515610e8657600080fd5b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610f7757600080fd5b505afa158015610f8b573d6000803e3d6000fd5b505050506040513d6020811015610fa157600080fd5b81019080805190602001909291905050509050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156110ad57600080fd5b505af11580156110c1573d6000803e3d6000fd5b505050506040513d60208110156110d757600080fd5b810190808051906020019092919050505015156110f357600080fd5b50565b6000600260009054906101000a900460ff16905090565b6000600754905090565b60006111c061112461176c565b846111bb856004600061113561176c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b611774565b6001905092915050565b60006111dc6111d761176c565b6116c8565b1515611276576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b6112808383611ef0565b6001905092915050565b60006112e6600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d884611317565b611faf90919063ffffffff16565b9050919050565b60006112f7611d0b565b905060008113156113145761131361130e82611ff9565b612012565b5b50565b60007001000000000000000000000000000000006113a96113a4600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611396611391611380886113e0565b60085461216290919063ffffffff16565b61222f565b61224e90919063ffffffff16565b611ff9565b8115156113b257fe5b049050919050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114c15780601f10611496576101008083540402835291602001916114c1565b820191906000526020600020905b8154815290600101906020018083116114a457829003601f168201915b5050505050905090565b6114db6114d661176c565b6116c8565b1515611575576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001807f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766581526020017f20746865204d696e74657220726f6c650000000000000000000000000000000081525060400191505060405180910390fd5b61157e81612292565b50565b61159161158c61176c565b6122ec565b565b600061169a6115a061176c565b8461169585606060405190810160405280602581526020017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781526020017f207a65726f0000000000000000000000000000000000000000000000000000008152506004600061160e61176c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b519092919063ffffffff16565b611774565b6001905092915050565b60006116b86116b161176c565b84846119f5565b6001905092915050565b600c5481565b60006116de82600661234690919063ffffffff16565b9050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561183f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561190a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b611a00838383612469565b6000611a1f611a1a8360085461216290919063ffffffff16565b61222f565b9050611a7381600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461224e90919063ffffffff16565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b0881600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127f190919063ffffffff16565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60008383111582901515611c00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bc5578082015181840152602081019050611baa565b50505050905090810190601f168015611bf25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080611c1f3361128a565b9050611c7381600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040518082815260200191505060405180910390a28091505090565b600080600c549050600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611dce57600080fd5b505afa158015611de2573d6000803e3d6000fd5b505050506040513d6020811015611df857600080fd5b8101908080519060200190929190505050600c81905550600c54811115611e3657611e2e600c54826127f190919063ffffffff16565b915050611e63565b80600c541115611e5d57611e5581600c546127f190919063ffffffff16565b915050611e63565b60009150505b90565b6000808284019050838110151515611ee6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611efa8282612833565b611f68611f1a611f158360085461216290919063ffffffff16565b61222f565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127f190919063ffffffff16565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b6000611ff183836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b51565b905092915050565b600080821215151561200a57600080fd5b819050919050565b600061201c610a75565b1115156120b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001807f46756e6473446973747269627574696f6e546f6b656e2e5f646973747269627581526020017f746546756e64733a20535550504c595f49535f5a45524f00000000000000000081525060400191505060405180910390fd5b600081111561215f5761210a6120cb610a75565b6120ef7001000000000000000000000000000000008461216290919063ffffffff16565b8115156120f857fe5b04600854611e6690919063ffffffff16565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167f26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd826040518082815260200191505060405180910390a25b50565b6000808314156121755760009050612229565b6000828402905082848281151561218857fe5b04141515612224576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b6000808290506000811215151561224557600080fd5b80915050919050565b6000808284019050600083121580156122675750838112155b8061227d575060008312801561227c57508381125b5b151561228857600080fd5b8091505092915050565b6122a68160066128d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6123008160066129b190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526f6c65733a206163636f756e7420697320746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515612534576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156125ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6126af81606060405190810160405280602681526020017f45524332303a207472616e7366657220616d6f756e742065786365656473206281526020017f616c616e63650000000000000000000000000000000000000000000000000000815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b519092919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061274481600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080821215801561280557508282840313155b8061281d575060008212801561281c575082828403135b5b151561282857600080fd5b818303905092915050565b60075461285082612842610a75565b611e6690919063ffffffff16565b111515156128c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b6128d08282612ab3565b5050565b6128de8282612346565b151515612953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6129bb8282612346565b1515612a55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c81526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612b58576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b612b6d81600554611e6690919063ffffffff16565b600581905550612bc581600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e6690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505056fea165627a7a72305820c2d6feb330958046eddbe75df58d6b7c66eb8eb725dfd1197da5a2176620d6e80029",
  "sourceMap": "201:2915:0:-;;;683:276;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:276:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;683:276:0;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;683:276:0;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;683:276:0;;;;;;;;;;;;;;;;;807:4;813:6;1533:3:1;1501:4;1507:6;1515:1;530:4:13;522:5;:12;;;;;;;;;;;;:::i;:::-;;555:6;545:7;:16;;;;;;;;;;;;:::i;:::-;;584:8;572:9;;:20;;;;;;;;;;;;;;;;;;433:167;;;328:24:6;339:12;:10;;;:12;;;:::i;:::-;328:10;;;:24;;;:::i;:::-;419:1:12;413:3;:7;405:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;464:3;457:4;:10;;;;361:114;1545:22:1;1551:10;1563:3;1545:5;;;:22;;;:::i;:::-;1406:166;;869:1:0;837:34;;845:11;837:34;;;;829:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;943:11;930:10;;:24;;;;;;;;;;;;;;;;;;683:276;;;201:2915;;806:98:5;851:15;886:10;879:17;;806:98;:::o;816:122:6:-;873:21;886:7;873:8;:12;;;;;;:21;;;;;:::i;:::-;922:7;910:20;;;;;;;;;;;;816:122;:::o;5362:208:1:-;5423:27;5435:7;5444:5;5423:11;;;;;:27;;;:::i;:::-;5485:80;5521:42;5522:25;5541:5;5522:14;;:18;;;;;;:25;;;;;:::i;:::-;5521:40;;;;;:42;;;:::i;:::-;5485:16;:25;5502:7;5485:25;;;;;;;;;;;;;;;;:34;;;;;;:80;;;;;:::i;:::-;5457:16;:25;5474:7;5457:25;;;;;;;;;;;;;;;:108;;;;5362:208;;:::o;274:178:7:-;352:18;356:4;362:7;352:3;;;:18;;;:::i;:::-;351:19;343:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:4;417;:11;;:20;429:7;417:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:178;;:::o;807:183:12:-;910:4;;882:24;900:5;882:13;:11;;;:13;;;:::i;:::-;:17;;;;;;:24;;;;;:::i;:::-;:32;;874:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;955:27;967:7;976:5;955:11;;;;;:27;;;:::i;:::-;807:183;;:::o;2344:471:8:-;2402:7;2652:1;2647;:6;2643:47;;;2677:1;2670:8;;;;2643:47;2702:9;2718:1;2714;:5;2702:17;;2747:1;2742;2738;:5;;;;;;;;:10;2730:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2806:1;2799:8;;;2344:471;;;;;:::o;152:134:10:-;208:6;223:8;241:1;223:20;;263:1;258;:6;;250:15;;;;;;;;279:1;272:8;;;152:134;;;:::o;976:153:9:-;1032:6;1061:1;1056;:6;;:20;;;;;1075:1;1070;1066;:5;:10;;1056:20;1055:46;;;;1086:1;1082;:5;:18;;;;;1099:1;1095;1091;:5;:9;1082:18;1055:46;1047:55;;;;;;;;1122:1;1118;:5;1111:12;;976:153;;;;:::o;810:203:7:-;882:4;926:1;907:21;;:7;:21;;;;899:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:4;:11;;:20;997:7;985:20;;;;;;;;;;;;;;;;;;;;;;;;;978:27;;810:203;;;;:::o;1595:91:11:-;1639:7;1666:12;;1659:19;;1595:91;:::o;859:181:8:-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o;6127:308:11:-;6222:1;6203:21;;:7;:21;;;;6195:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6288:24;6305:6;6288:12;;:16;;;;;;:24;;;;;:::i;:::-;6273:12;:39;;;;6344:30;6367:6;6344:9;:18;6354:7;6344:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;;:::i;:::-;6323:9;:18;6333:7;6323:18;;;;;;;;;;;;;;;:51;;;;6411:7;6390:37;;6407:1;6390:37;;;6420:6;6390:37;;;;;;;;;;;;;;;;;;6127:308;;:::o;201:2915:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "201:2915:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3748:110:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3748:110:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3748:110:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:83:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;670:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;670:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:152:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2574:152:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2574:152:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1595:91:11;;;;;;;;;;;;;;;;;;;;;;;3198:304;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3198:304:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3198:304:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1025:251:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1025:251:0;;;;;;2859:250;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2859:250:0;;;;;;1522:83:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1522:83:13;;;;;;;;;;;;;;;;;;;;;;;;;;;559:75:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;559:75:12;;;;;;;;;;;;;;;;;;;;;;;3911:210:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3911:210:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3911:210:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:143:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:143:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:143:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3372:146:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3372:146:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3372:146:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2349:172:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2349:172:0;;;;;;4287:213:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4287:213:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4287:213:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;405:24:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;405:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1749:110:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1749:110:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1749:110:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:87:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;872:87:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;872:87:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:92:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;629:92:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;629:92:6;;;;;;;;;;;;;;;;;;;;;;729:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;729:79:6;;;;;;4624:261:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4624:261:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4624:261:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:158;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2072:158:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2072:158:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:32:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:32:0;;;;;;;;;;;;;;;;;;;;;;;512:109:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:109:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;512:109:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:134:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2293:134:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2293:134:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3748:110:1;3810:7;3831:14;:22;3846:6;3831:22;;;;;;;;;;;;;;;;3824:29;;3748:110;;;:::o;670:83:13:-;707:13;740:5;733:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:83;:::o;2574:152:11:-;2640:4;2657:39;2666:12;:10;:12::i;:::-;2680:7;2689:6;2657:8;:39::i;:::-;2714:4;2707:11;;2574:152;;;;:::o;1595:91::-;1639:7;1666:12;;1659:19;;1595:91;:::o;3198:304::-;3287:4;3304:36;3314:6;3322:9;3333:6;3304:9;:36::i;:::-;3351:121;3360:6;3368:12;:10;:12::i;:::-;3382:89;3420:6;3382:89;;;;;;;;;;;;;;;;;;;;;;;:11;:19;3394:6;3382:19;;;;;;;;;;;;;;;:33;3402:12;:10;:12::i;:::-;3382:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3351:8;:121::i;:::-;3490:4;3483:11;;3198:304;;;;;:::o;1025:251:0:-;1071:25;1099:18;:16;:18::i;:::-;1071:46;;1134:10;;;;;;;;;;;:19;;;1154:10;1166:17;1134:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1134:50:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1134:50:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1134:50:0;;;;;;;;;;;;;;;;1126:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:26;:24;:26::i;:::-;;1025:251;:::o;2859:250::-;2961:1;2911:10;;;;;;;;;;;:20;;;2932:10;2952:4;2911:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2911:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2911:47:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2911:47:0;;;;;;;;;;;;;;;;:51;2903:60;;;;;;;;2968:14;2985:10;;;;;;;;;;;:20;;;3006:10;3026:4;2985:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2985:47:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2985:47:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2985:47:0;;;;;;;;;;;;;;;;2968:64;;3045:10;;;;;;;;;;;:23;;;3069:10;3089:4;3096:6;3045:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3045:58:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3045:58:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3045:58:0;;;;;;;;;;;;;;;;3037:67;;;;;;;;2859:250;:::o;1522:83:13:-;1563:5;1588:9;;;;;;;;;;;1581:16;;1522:83;:::o;559:75:12:-;595:7;622:4;;615:11;;559:75;:::o;3911:210:11:-;3991:4;4008:83;4017:12;:10;:12::i;:::-;4031:7;4040:50;4079:10;4040:11;:25;4052:12;:10;:12::i;:::-;4040:25;;;;;;;;;;;;;;;:34;4066:7;4040:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4008:8;:83::i;:::-;4109:4;4102:11;;3911:210;;;;:::o;512:143:14:-;586:4;409:22:6;418:12;:10;:12::i;:::-;409:8;:22::i;:::-;401:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;603:22:14;609:7;618:6;603:5;:22::i;:::-;643:4;636:11;;512:143;;;;:::o;3372:146:1:-;3437:7;3458:55;3490:14;:22;3505:6;3490:22;;;;;;;;;;;;;;;;3458:27;3478:6;3458:19;:27::i;:::-;:31;;:55;;;;:::i;:::-;3451:62;;3372:146;;;:::o;2349:172:0:-;2394:15;2412:26;:24;:26::i;:::-;2394:44;;2460:1;2449:8;:12;2445:72;;;2469:42;2486:24;:8;:22;:24::i;:::-;2469:16;:42::i;:::-;2445:72;2349:172;:::o;4287:213:1:-;4352:7;1244:6;4373:103;:87;4435:16;:24;4452:6;4435:24;;;;;;;;;;;;;;;;4373:52;:37;4392:17;4402:6;4392:9;:17::i;:::-;4373:14;;:18;;:37;;;;:::i;:::-;:50;:52::i;:::-;:61;;:87;;;;:::i;:::-;:101;:103::i;:::-;:122;;;;;;;;4366:129;;4287:213;;;:::o;405:24:0:-;;;;;;;;;;;;;:::o;1749:110:11:-;1806:7;1833:9;:18;1843:7;1833:18;;;;;;;;;;;;;;;;1826:25;;1749:110;;;:::o;872:87:13:-;911:13;944:7;937:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:87;:::o;629:92:6:-;409:22;418:12;:10;:12::i;:::-;409:8;:22::i;:::-;401:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:19;705:7;694:10;:19::i;:::-;629:92;:::o;729:79::-;773:27;787:12;:10;:12::i;:::-;773:13;:27::i;:::-;729:79::o;4624:261:11:-;4709:4;4726:129;4735:12;:10;:12::i;:::-;4749:7;4758:96;4797:15;4758:96;;;;;;;;;;;;;;;;;;;;;;;:11;:25;4770:12;:10;:12::i;:::-;4758:25;;;;;;;;;;;;;;;:34;4784:7;4758:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4726:8;:129::i;:::-;4873:4;4866:11;;4624:261;;;;:::o;2072:158::-;2141:4;2158:42;2168:12;:10;:12::i;:::-;2182:9;2193:6;2158:9;:42::i;:::-;2218:4;2211:11;;2072:158;;;;:::o;497:32:0:-;;;;:::o;512:109:6:-;568:4;592:21;605:7;592:8;:12;;:21;;;;:::i;:::-;585:28;;512:109;;;:::o;2293:134:11:-;2365:7;2392:11;:18;2404:5;2392:18;;;;;;;;;;;;;;;:27;2411:7;2392:27;;;;;;;;;;;;;;;;2385:34;;2293:134;;;;:::o;806:98:5:-;851:15;886:10;879:17;;806:98;:::o;7555:338:11:-;7666:1;7649:19;;:5;:19;;;;7641:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7747:1;7728:21;;:7;:21;;;;7720:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7831:6;7801:11;:18;7813:5;7801:18;;;;;;;;;;;;;;;:27;7820:7;7801:27;;;;;;;;;;;;;;;:36;;;;7869:7;7853:32;;7862:5;7853:32;;;7878:6;7853:32;;;;;;;;;;;;;;;;;;7555:338;;;:::o;4787:322:1:-;4861:32;4877:4;4883:2;4887:5;4861:15;:32::i;:::-;4900:21;4924:40;:25;4943:5;4924:14;;:18;;:25;;;;:::i;:::-;:38;:40::i;:::-;4900:64;;4994:42;5021:14;4994:16;:22;5011:4;4994:22;;;;;;;;;;;;;;;;:26;;:42;;;;:::i;:::-;4969:16;:22;4986:4;4969:22;;;;;;;;;;;;;;;:67;;;;5064:40;5089:14;5064:16;:20;5081:2;5064:20;;;;;;;;;;;;;;;;:24;;:40;;;;:::i;:::-;5041:16;:20;5058:2;5041:20;;;;;;;;;;;;;;;:63;;;;4787:322;;;;:::o;1901:192:8:-;1987:7;2020:1;2015;:6;;2023:12;2007:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2007:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:9;2063:1;2059;:5;2047:17;;2084:1;2077:8;;;1901:192;;;;;:::o;2828:316:1:-;2874:7;2888:29;2920:31;2940:10;2920:19;:31::i;:::-;2888:63;;2988:53;3019:21;2988:14;:26;3003:10;2988:26;;;;;;;;;;;;;;;;:30;;:53;;;;:::i;:::-;2959:14;:26;2974:10;2959:26;;;;;;;;;;;;;;;:82;;;;3070:10;3055:49;;;3082:21;3055:49;;;;;;;;;;;;;;;;;;3118:21;3111:28;;;2828:316;:::o;1511:493:0:-;1565:6;1578:29;1610:17;;1578:49;;1656:10;;;;;;;;;;;:20;;;1685:4;1656:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1656:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1656:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1656:35:0;;;;;;;;;;;;;;;;1636:17;:55;;;;1726:17;;1702:21;:41;1698:296;;;1758:60;1799:17;;1765:21;1758:33;;:60;;;;:::i;:::-;1751:67;;;;;1698:296;1860:21;1840:17;;:41;1836:158;;;1896:60;1933:21;1903:17;;1896:29;;:60;;;;:::i;:::-;1889:67;;;;;1836:158;1987:1;1980:8;;;1511:493;;:::o;859:181:8:-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o;5362:208:1:-;5423:27;5435:7;5444:5;5423:11;:27::i;:::-;5485:80;5521:42;5522:25;5541:5;5522:14;;:18;;:25;;;;:::i;:::-;5521:40;:42::i;:::-;5485:16;:25;5502:7;5485:25;;;;;;;;;;;;;;;;:34;;:80;;;;:::i;:::-;5457:16;:25;5474:7;5457:25;;;;;;;;;;;;;;;:108;;;;5362:208;;:::o;1315:136:8:-;1373:7;1400:43;1404:1;1407;1400:43;;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1393:50;;1315:136;;;;:::o;1303:117:9:-;1359:7;1388:1;1383;:6;;1375:15;;;;;;;;1412:1;1397:17;;1303:117;;;:::o;2333:315:1:-;2412:1;2396:13;:11;:13::i;:::-;:17;2388:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2492:1;2484:5;:9;2480:164;;;2518:74;2573:13;:11;:13::i;:::-;2543:27;1244:6;2543:5;:9;;:27;;;;:::i;:::-;:43;;;;;;;;2518:14;;:18;;:74;;;;:::i;:::-;2501:14;:91;;;;2620:10;2603:35;;;2632:5;2603:35;;;;;;;;;;;;;;;;;;2480:164;2333:315;:::o;2344:471:8:-;2402:7;2652:1;2647;:6;2643:47;;;2677:1;2670:8;;;;2643:47;2702:9;2718:1;2714;:5;2702:17;;2747:1;2742;2738;:5;;;;;;;;:10;2730:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2806:1;2799:8;;;2344:471;;;;;:::o;152:134:10:-;208:6;223:8;241:1;223:20;;263:1;258;:6;;250:15;;;;;;;;279:1;272:8;;;152:134;;;:::o;1135:162:9:-;1191:6;1206:8;1221:1;1217;:5;1206:16;;1243:1;1238;:6;;:16;;;;;1253:1;1248;:6;;1238:16;1237:38;;;;1264:1;1260;:5;:14;;;;;1273:1;1269;:5;1260:14;1237:38;1229:47;;;;;;;;1290:1;1283:8;;;1135:162;;;;:::o;816:122:6:-;873:21;886:7;873:8;:12;;:21;;;;:::i;:::-;922:7;910:20;;;;;;;;;;;;816:122;:::o;946:130::-;1006:24;1022:7;1006:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;946:130;:::o;810:203:7:-;882:4;926:1;907:21;;:7;:21;;;;899:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:4;:11;;:20;997:7;985:20;;;;;;;;;;;;;;;;;;;;;;;;;978:27;;810:203;;;;:::o;5375:471:11:-;5491:1;5473:20;;:6;:20;;;;5465:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5575:1;5554:23;;:9;:23;;;;5546:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5650;5672:6;5650:71;;;;;;;;;;;;;;;;;;;;;;;:9;:17;5660:6;5650:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5630:9;:17;5640:6;5630:17;;;;;;;;;;;;;;;:91;;;;5755:32;5780:6;5755:9;:20;5765:9;5755:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5732:9;:20;5742:9;5732:20;;;;;;;;;;;;;;;:55;;;;5820:9;5803:35;;5812:6;5803:35;;;5831:6;5803:35;;;;;;;;;;;;;;;;;;5375:471;;;:::o;976:153:9:-;1032:6;1061:1;1056;:6;;:20;;;;;1075:1;1070;1066;:5;:10;;1056:20;1055:46;;;;1086:1;1082;:5;:18;;;;;1099:1;1095;1091;:5;:9;1082:18;1055:46;1047:55;;;;;;;;1122:1;1118;:5;1111:12;;976:153;;;;:::o;807:183:12:-;910:4;;882:24;900:5;882:13;:11;:13::i;:::-;:17;;:24;;;;:::i;:::-;:32;;874:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;955:27;967:7;976:5;955:11;:27::i;:::-;807:183;;:::o;274:178:7:-;352:18;356:4;362:7;352:3;:18::i;:::-;351:19;343:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:4;417;:11;;:20;429:7;417:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;274:178;;:::o;532:183::-;612:18;616:4;622:7;612:3;:18::i;:::-;604:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:5;679:4;:11;;:20;691:7;679:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;532:183;;:::o;6127:308:11:-;6222:1;6203:21;;:7;:21;;;;6195:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6288:24;6305:6;6288:12;;:16;;:24;;;;:::i;:::-;6273:12;:39;;;;6344:30;6367:6;6344:9;:18;6354:7;6344:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6323:9;:18;6333:7;6323:18;;;;;;;;;;;;;;;:51;;;;6411:7;6390:37;;6407:1;6390:37;;;6420:6;6390:37;;;;;;;;;;;;;;;;;;6127:308;;:::o",
>>>>>>> origin/master
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./external/math/SafeMathUint.sol\";\r\nimport \"./external/math/SafeMathInt.sol\";\r\n\r\nimport \"./IFundsDistributionToken.sol\";\r\nimport \"./FundsDistributionToken.sol\";\r\n\r\n\r\ncontract FDT_ERC20Extension is IFundsDistributionToken, FundsDistributionToken {\r\n\r\n\tusing SafeMathUint for uint256;\r\n\tusing SafeMathInt for int256;\r\n\r\n\t// token to be used for sending to this contract\r\n\tIERC20 public fundsToken;\r\n\r\n\t// balance of fundsToken that this contract currently holds\r\n\tuint256 public fundsTokenBalance;\r\n\r\n\tmodifier onlyFundsToken () {\r\n\t\trequire(msg.sender == address(fundsToken), \"FDT_ERC20Extension.onlyFundsToken: UNAUTHORISED_SENDER\");\r\n\t\t_;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tstring memory name, \r\n\t\tstring memory symbol,\r\n\t\tIERC20 _fundsToken\r\n\t)\r\n\t\tpublic\r\n\t\tFundsDistributionToken(name, symbol) \r\n\t{\r\n\t\trequire(address(_fundsToken) != address(0), \"FDT_ERC20Extension: INVALID_FUNDS_TOKEN_ADDRESS\");\r\n\r\n\t\tfundsToken = _fundsToken;\r\n\t}\r\n\r\n\t/**\r\n\t * @notice Withdraws available funds for user.\r\n\t */\r\n\tfunction withdrawFunds() \r\n\t\texternal \r\n\t{\r\n\t\tuint256 withdrawableFunds = _prepareWithdraw();\r\n\t\t\r\n\t\trequire(fundsToken.transfer(msg.sender, withdrawableFunds), \"FDT_ERC20Extension.withdrawFunds: TRANSFER_FAILED\");\r\n\r\n\t\t_updateFundsTokenBalance();\r\n\t}\r\n\r\n\t/**\r\n\t * @dev Updates the current funds token balance \r\n\t * and returns the difference of new and previous funds token balances\r\n\t * @return A int256 representing the difference of the new and previous funds token balance\r\n\t */\r\n\tfunction _updateFundsTokenBalance() internal returns (int256) {\r\n\t\tuint256 prevFundsTokenBalance = fundsTokenBalance;\r\n\t\t\r\n\t\tfundsTokenBalance = fundsToken.balanceOf(address(this));\r\n\r\n\t\tif (prevFundsTokenBalance > fundsTokenBalance) {\r\n\t\t\treturn int256(prevFundsTokenBalance).sub(int256(fundsTokenBalance));\r\n\t\t} \r\n\r\n\t\telse if (fundsTokenBalance > prevFundsTokenBalance) {\r\n\t\t\treturn int256(fundsTokenBalance).sub(int256(prevFundsTokenBalance));\r\n\t\t} \r\n\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * @notice Register a payment of funds in tokens. May be called directly after a deposit is made.\r\n\t * @dev Calls _updateFundsTokenBalance(), whereby the contract computes the delta of the previous and the new \r\n\t * funds token balance and increments the total received funds (cumulative) by delta by calling _registerFunds()\r\n\t */\r\n\tfunction updateFundsReceived() external {\r\n\t\tint256 newFunds = _updateFundsTokenBalance();\r\n\r\n\t\tif (newFunds > 0) {\r\n\t\t\t_distributeFunds(newFunds.toUint256Safe());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @notice Pay fundsToken to contract\r\n\t * Front end should call fundsToken contract to approve transfer - https://ethereum.stackexchange.com/questions/57286/make-function-payable-for-a-specific-erc20-token\r\n\t * https://ethereum.stackexchange.com/questions/30527/smart-contract-to-receive-tokens-and-give-ether/30532\r\n\t */\r\n\r\n\tfunction payToContract()\r\n\t\texternal\r\n\t{\r\n\t\trequire(fundsToken.allowance(msg.sender, address(this)) > 0);\r\n\t\tuint256 amount = fundsToken.allowance(msg.sender, address(this));\r\n\t\trequire(fundsToken.transferFrom(msg.sender, address(this), amount));\r\n\t}\r\n\r\n\r\n}",
  "sourcePath": "C:\\Users\\Gary\\funds-distribution-token-custom\\contracts\\FDT_ERC20Extension.sol",
  "ast": {
    "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/FDT_ERC20Extension.sol",
    "exportedSymbols": {
      "FDT_ERC20Extension": [
        195
      ]
    },
    "id": 196,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/external/math/SafeMathUint.sol",
        "file": "./external/math/SafeMathUint.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 1231,
        "src": "27:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/external/math/SafeMathInt.sol",
        "file": "./external/math/SafeMathInt.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 1206,
        "src": "71:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/IFundsDistributionToken.sol",
        "file": "./IFundsDistributionToken.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 522,
        "src": "116:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/FundsDistributionToken.sol",
        "file": "./FundsDistributionToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 497,
        "src": "157:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "IFundsDistributionToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 521,
              "src": "232:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFundsDistributionToken_$521",
                "typeString": "contract IFundsDistributionToken"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "232:23:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "FundsDistributionToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 496,
              "src": "257:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FundsDistributionToken_$496",
                "typeString": "contract FundsDistributionToken"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "257:22:0"
          }
        ],
        "contractDependencies": [
          496,
          521,
          636,
          743,
          1635,
          1694,
          1752,
          1780,
          1849
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 195,
        "linearizedBaseContracts": [
          195,
          496,
          1694,
          1780,
          743,
          1635,
          1752,
          1849,
          636,
          521
        ],
        "name": "FDT_ERC20Extension",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "SafeMathUint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1230,
              "src": "292:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUint_$1230",
                "typeString": "library SafeMathUint"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "286:31:0",
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "SafeMathInt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1205,
              "src": "326:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathInt_$1205",
                "typeString": "library SafeMathInt"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "320:29:0",
            "typeName": {
              "id": 14,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "342:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "id": 17,
            "name": "fundsToken",
            "nodeType": "VariableDeclaration",
            "scope": 195,
            "src": "405:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1849",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 16,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1849,
              "src": "405:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1849",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "fundsTokenBalance",
            "nodeType": "VariableDeclaration",
            "scope": 195,
            "src": "497:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "562:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "575:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "575:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 25,
                              "name": "fundsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "597:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "589:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "589:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "575:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4644545f4552433230457874656e73696f6e2e6f6e6c7946756e6473546f6b656e3a20554e415554484f52495345445f53454e444552",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "610:56:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e874dede2045ea09d86670442f3c6d0f03c1f901a1c13e689ae75fd8cbe02b43",
                          "typeString": "literal_string \"FDT_ERC20Extension.onlyFundsToken: UNAUTHORISED_SENDER\""
                        },
                        "value": "FDT_ERC20Extension.onlyFundsToken: UNAUTHORISED_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e874dede2045ea09d86670442f3c6d0f03c1f901a1c13e689ae75fd8cbe02b43",
                          "typeString": "literal_string \"FDT_ERC20Extension.onlyFundsToken: UNAUTHORISED_SENDER\""
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1868,
                      "src": "567:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "567:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "567:100:0"
                },
                {
                  "id": 31,
                  "nodeType": "PlaceholderStatement",
                  "src": "672:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "name": "onlyFundsToken",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:0"
            },
            "src": "535:143:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "824:135:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 48,
                              "name": "_fundsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "845:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "837:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "837:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "869:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "861:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "861:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "837:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4644545f4552433230457874656e73696f6e3a20494e56414c49445f46554e44535f544f4b454e5f41444452455353",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "873:49:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e11a6fa91c3a63b9539f484331b31182bf77ba86d01eed662d67bd84fe3dbfc5",
                          "typeString": "literal_string \"FDT_ERC20Extension: INVALID_FUNDS_TOKEN_ADDRESS\""
                        },
                        "value": "FDT_ERC20Extension: INVALID_FUNDS_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e11a6fa91c3a63b9539f484331b31182bf77ba86d01eed662d67bd84fe3dbfc5",
                          "typeString": "literal_string \"FDT_ERC20Extension: INVALID_FUNDS_TOKEN_ADDRESS\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1868,
                      "src": "829:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "829:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "fundsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "930:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "_fundsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "943:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "930:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1849",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "930:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 62,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 42,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "807:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 43,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "813:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 44,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 41,
                  "name": "FundsDistributionToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 496,
                  "src": "784:22:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FundsDistributionToken_$496_$",
                    "typeString": "type(contract FundsDistributionToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "784:36:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "699:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "723:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "name": "_fundsToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "748:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1849",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1849,
                    "src": "748:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1849",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "694:76:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:0:0"
            },
            "scope": 195,
            "src": "683:276:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "1066:210:0",
              "statements": [
                {
                  "assignments": [
                    66
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66,
                      "name": "withdrawableFunds",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1071:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1071:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67,
                      "name": "_prepareWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "1099:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1071:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 73,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1864,
                              "src": "1154:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1154:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "withdrawableFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1166:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "fundsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1134:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1849",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "1134:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1134:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4644545f4552433230457874656e73696f6e2e776974686472617746756e64733a205452414e534645525f4641494c4544",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1186:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d459132a1cd1a612c5c22a20504081456209512f13cf84b8c04a5004ac997256",
                          "typeString": "literal_string \"FDT_ERC20Extension.withdrawFunds: TRANSFER_FAILED\""
                        },
                        "value": "FDT_ERC20Extension.withdrawFunds: TRANSFER_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d459132a1cd1a612c5c22a20504081456209512f13cf84b8c04a5004ac997256",
                          "typeString": "literal_string \"FDT_ERC20Extension.withdrawFunds: TRANSFER_FAILED\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1868,
                      "src": "1126:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:112:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:112:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80,
                      "name": "_updateFundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "1245:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_int256_$",
                        "typeString": "function () returns (int256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:26:0"
                }
              ]
            },
            "documentation": "@notice Withdraws available funds for user.",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:2:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:0:0"
            },
            "scope": 195,
            "src": "1025:251:0",
            "stateMutability": "nonpayable",
            "superFunction": 508,
            "visibility": "external"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1573:431:0",
              "statements": [
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "name": "prevFundsTokenBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 133,
                      "src": "1578:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1578:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 91,
                    "name": "fundsTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "1610:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1578:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "fundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1636:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 97,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1834,
=======
                              "referencedDeclaration": 1903,
>>>>>>> origin/master
                              "src": "1685:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                "typeString": "contract FDT_ERC20Extension"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                "typeString": "contract FDT_ERC20Extension"
                              }
                            ],
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1677:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1677:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "fundsToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1656:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1849",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1794,
                        "src": "1656:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1656:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1636:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:55:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "prevFundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1702:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "fundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1726:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1702:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "fundsTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1840:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "prevFundsTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1860:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1840:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 130,
                      "nodeType": "Block",
                      "src": "1974:20:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1987:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 88,
                          "id": 129,
                          "nodeType": "Return",
                          "src": "1980:8:0"
                        }
                      ]
                    },
                    "id": 131,
                    "nodeType": "IfStatement",
                    "src": "1836:158:0",
                    "trueBody": {
                      "id": 127,
                      "nodeType": "Block",
                      "src": "1883:79:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 123,
                                    "name": "prevFundsTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90,
                                    "src": "1933:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1926:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": "int256"
                                },
                                "id": 124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1926:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 119,
                                    "name": "fundsTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19,
                                    "src": "1903:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1896:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": "int256"
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1896:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1148,
                              "src": "1896:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                "typeString": "function (int256,int256) pure returns (int256)"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1896:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 88,
                          "id": 126,
                          "nodeType": "Return",
                          "src": "1889:67:0"
                        }
                      ]
                    }
                  },
                  "id": 132,
                  "nodeType": "IfStatement",
                  "src": "1698:296:0",
                  "trueBody": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "1745:79:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 110,
                                  "name": "fundsTokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "1799:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1792:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": "int256"
                              },
                              "id": 111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1792:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 106,
                                  "name": "prevFundsTokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "1765:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1758:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": "int256"
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1758:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1148,
                            "src": "1758:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                              "typeString": "function (int256,int256) pure returns (int256)"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1758:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 88,
                        "id": 113,
                        "nodeType": "Return",
                        "src": "1751:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Updates the current funds token balance \nand returns the difference of new and previous funds token balances\n@return A int256 representing the difference of the new and previous funds token balance",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateFundsTokenBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1544:2:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1565:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1564:8:0"
            },
            "scope": 195,
            "src": "1511:493:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "2389:132:0",
              "statements": [
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "name": "newFunds",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "2394:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2394:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 141,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 139,
                      "name": "_updateFundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2412:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_int256_$",
                        "typeString": "function () returns (int256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2412:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2394:44:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2449:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2460:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2449:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 152,
                  "nodeType": "IfStatement",
                  "src": "2445:72:0",
                  "trueBody": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "2463:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 146,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138,
                                  "src": "2486:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toUint256Safe",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1204,
                                "src": "2486:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
                                  "typeString": "function (int256) pure returns (uint256)"
                                }
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2486:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 145,
                            "name": "_distributeFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "2469:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2469:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "2469:42:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Register a payment of funds in tokens. May be called directly after a deposit is made.\n@dev Calls _updateFundsTokenBalance(), whereby the contract computes the delta of the previous and the new \nfunds token balance and increments the total received funds (cumulative) by delta by calling _registerFunds()",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateFundsReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:2:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:0:0"
            },
            "scope": 195,
            "src": "2349:172:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "2898:211:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 160,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1864,
                                "src": "2932:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2932:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 163,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 1834,
=======
                                  "referencedDeclaration": 1903,
>>>>>>> origin/master
                                  "src": "2952:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                    "typeString": "contract FDT_ERC20Extension"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                    "typeString": "contract FDT_ERC20Extension"
                                  }
                                ],
                                "id": 162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2944:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2944:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 158,
                              "name": "fundsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "2911:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1812,
                            "src": "2911:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2911:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2961:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2911:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1867,
                      "src": "2903:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:60:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "2968:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "3006:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3006:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 177,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1834,
=======
                            "referencedDeclaration": 1903,
>>>>>>> origin/master
                            "src": "3026:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                              "typeString": "contract FDT_ERC20Extension"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                              "typeString": "contract FDT_ERC20Extension"
                            }
                          ],
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3018:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3018:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "fundsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2985:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1812,
                      "src": "2985:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:64:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1864,
                              "src": "3069:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3069:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 187,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1834,
=======
                                "referencedDeclaration": 1903,
>>>>>>> origin/master
                                "src": "3089:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                  "typeString": "contract FDT_ERC20Extension"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                  "typeString": "contract FDT_ERC20Extension"
                                }
                              ],
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3081:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3081:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "3096:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 182,
                            "name": "fundsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "3045:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1849",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1832,
                          "src": "3045:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3045:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1867,
                      "src": "3037:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:67:0"
                }
              ]
            },
            "documentation": "@notice Pay fundsToken to contract\nFront end should call fundsToken contract to approve transfer - https://ethereum.stackexchange.com/questions/57286/make-function-payable-for-a-specific-erc20-token\nhttps://ethereum.stackexchange.com/questions/30527/smart-contract-to-receive-tokens-and-give-ether/30532",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payToContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2881:2:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2898:0:0"
            },
            "scope": 195,
            "src": "2859:250:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 196,
        "src": "201:2915:0"
      }
    ],
    "src": "0:3116:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/FDT_ERC20Extension.sol",
    "exportedSymbols": {
      "FDT_ERC20Extension": [
        195
      ]
    },
    "id": 196,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/external/math/SafeMathUint.sol",
        "file": "./external/math/SafeMathUint.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 1231,
        "src": "27:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/external/math/SafeMathInt.sol",
        "file": "./external/math/SafeMathInt.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 1206,
        "src": "71:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/IFundsDistributionToken.sol",
        "file": "./IFundsDistributionToken.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 522,
        "src": "116:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/Gary/funds-distribution-token-custom/contracts/FundsDistributionToken.sol",
        "file": "./FundsDistributionToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 196,
        "sourceUnit": 497,
        "src": "157:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "IFundsDistributionToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 521,
              "src": "232:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFundsDistributionToken_$521",
                "typeString": "contract IFundsDistributionToken"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "232:23:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "FundsDistributionToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 496,
              "src": "257:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FundsDistributionToken_$496",
                "typeString": "contract FundsDistributionToken"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "257:22:0"
          }
        ],
        "contractDependencies": [
          496,
          521,
          636,
          743,
          1635,
          1694,
          1752,
          1780,
          1849
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 195,
        "linearizedBaseContracts": [
          195,
          496,
          1694,
          1780,
          743,
          1635,
          1752,
          1849,
          636,
          521
        ],
        "name": "FDT_ERC20Extension",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "SafeMathUint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1230,
              "src": "292:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUint_$1230",
                "typeString": "library SafeMathUint"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "286:31:0",
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "SafeMathInt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1205,
              "src": "326:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathInt_$1205",
                "typeString": "library SafeMathInt"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "320:29:0",
            "typeName": {
              "id": 14,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "342:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "constant": false,
            "id": 17,
            "name": "fundsToken",
            "nodeType": "VariableDeclaration",
            "scope": 195,
            "src": "405:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1849",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 16,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1849,
              "src": "405:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1849",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "name": "fundsTokenBalance",
            "nodeType": "VariableDeclaration",
            "scope": 195,
            "src": "497:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "497:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "562:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "575:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "575:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 25,
                              "name": "fundsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "597:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "589:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "589:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "575:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4644545f4552433230457874656e73696f6e2e6f6e6c7946756e6473546f6b656e3a20554e415554484f52495345445f53454e444552",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "610:56:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e874dede2045ea09d86670442f3c6d0f03c1f901a1c13e689ae75fd8cbe02b43",
                          "typeString": "literal_string \"FDT_ERC20Extension.onlyFundsToken: UNAUTHORISED_SENDER\""
                        },
                        "value": "FDT_ERC20Extension.onlyFundsToken: UNAUTHORISED_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e874dede2045ea09d86670442f3c6d0f03c1f901a1c13e689ae75fd8cbe02b43",
                          "typeString": "literal_string \"FDT_ERC20Extension.onlyFundsToken: UNAUTHORISED_SENDER\""
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1868,
                      "src": "567:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "567:100:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "567:100:0"
                },
                {
                  "id": 31,
                  "nodeType": "PlaceholderStatement",
                  "src": "672:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 33,
            "name": "onlyFundsToken",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:0"
            },
            "src": "535:143:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "824:135:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 48,
                              "name": "_fundsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39,
                              "src": "845:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "837:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "837:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "869:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "861:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "861:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "837:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4644545f4552433230457874656e73696f6e3a20494e56414c49445f46554e44535f544f4b454e5f41444452455353",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "873:49:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e11a6fa91c3a63b9539f484331b31182bf77ba86d01eed662d67bd84fe3dbfc5",
                          "typeString": "literal_string \"FDT_ERC20Extension: INVALID_FUNDS_TOKEN_ADDRESS\""
                        },
                        "value": "FDT_ERC20Extension: INVALID_FUNDS_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e11a6fa91c3a63b9539f484331b31182bf77ba86d01eed662d67bd84fe3dbfc5",
                          "typeString": "literal_string \"FDT_ERC20Extension: INVALID_FUNDS_TOKEN_ADDRESS\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1868,
                      "src": "829:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "829:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "fundsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "930:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "_fundsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "943:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1849",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "930:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1849",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "930:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 62,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 42,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "807:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 43,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "813:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 44,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 41,
                  "name": "FundsDistributionToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 496,
                  "src": "784:22:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FundsDistributionToken_$496_$",
                    "typeString": "type(contract FundsDistributionToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "784:36:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "699:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "723:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "name": "_fundsToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "748:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1849",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1849,
                    "src": "748:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1849",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "694:76:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "824:0:0"
            },
            "scope": 195,
            "src": "683:276:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "1066:210:0",
              "statements": [
                {
                  "assignments": [
                    66
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66,
                      "name": "withdrawableFunds",
                      "nodeType": "VariableDeclaration",
                      "scope": 83,
                      "src": "1071:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1071:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 67,
                      "name": "_prepareWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "1099:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1071:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 73,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1864,
                              "src": "1154:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1154:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 75,
                            "name": "withdrawableFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1166:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 71,
                            "name": "fundsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1134:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1849",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "1134:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1134:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4644545f4552433230457874656e73696f6e2e776974686472617746756e64733a205452414e534645525f4641494c4544",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1186:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d459132a1cd1a612c5c22a20504081456209512f13cf84b8c04a5004ac997256",
                          "typeString": "literal_string \"FDT_ERC20Extension.withdrawFunds: TRANSFER_FAILED\""
                        },
                        "value": "FDT_ERC20Extension.withdrawFunds: TRANSFER_FAILED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d459132a1cd1a612c5c22a20504081456209512f13cf84b8c04a5004ac997256",
                          "typeString": "literal_string \"FDT_ERC20Extension.withdrawFunds: TRANSFER_FAILED\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1868,
                      "src": "1126:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:112:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:112:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80,
                      "name": "_updateFundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "1245:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_int256_$",
                        "typeString": "function () returns (int256)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:26:0"
                }
              ]
            },
            "documentation": "@notice Withdraws available funds for user.",
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1047:2:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1066:0:0"
            },
            "scope": 195,
            "src": "1025:251:0",
            "stateMutability": "nonpayable",
            "superFunction": 508,
            "visibility": "external"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1573:431:0",
              "statements": [
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "name": "prevFundsTokenBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 133,
                      "src": "1578:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1578:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 92,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 91,
                    "name": "fundsTokenBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "1610:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1578:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 93,
                      "name": "fundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1636:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 97,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
<<<<<<< HEAD
                              "referencedDeclaration": 1834,
=======
                              "referencedDeclaration": 1903,
>>>>>>> origin/master
                              "src": "1685:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                "typeString": "contract FDT_ERC20Extension"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                "typeString": "contract FDT_ERC20Extension"
                              }
                            ],
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1677:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1677:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 94,
                          "name": "fundsToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1656:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1849",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1794,
                        "src": "1656:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1656:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1636:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:55:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "prevFundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1702:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "fundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1726:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1702:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "fundsTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1840:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "prevFundsTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1860:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1840:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 130,
                      "nodeType": "Block",
                      "src": "1974:20:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1987:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 88,
                          "id": 129,
                          "nodeType": "Return",
                          "src": "1980:8:0"
                        }
                      ]
                    },
                    "id": 131,
                    "nodeType": "IfStatement",
                    "src": "1836:158:0",
                    "trueBody": {
                      "id": 127,
                      "nodeType": "Block",
                      "src": "1883:79:0",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 123,
                                    "name": "prevFundsTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90,
                                    "src": "1933:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1926:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": "int256"
                                },
                                "id": 124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1926:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 119,
                                    "name": "fundsTokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19,
                                    "src": "1903:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1896:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_int256_$",
                                    "typeString": "type(int256)"
                                  },
                                  "typeName": "int256"
                                },
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1896:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1148,
                              "src": "1896:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                "typeString": "function (int256,int256) pure returns (int256)"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1896:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "functionReturnParameters": 88,
                          "id": 126,
                          "nodeType": "Return",
                          "src": "1889:67:0"
                        }
                      ]
                    }
                  },
                  "id": 132,
                  "nodeType": "IfStatement",
                  "src": "1698:296:0",
                  "trueBody": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "1745:79:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 110,
                                  "name": "fundsTokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "1799:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1792:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": "int256"
                              },
                              "id": 111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1792:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 106,
                                  "name": "prevFundsTokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "1765:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1758:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int256_$",
                                  "typeString": "type(int256)"
                                },
                                "typeName": "int256"
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1758:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1148,
                            "src": "1758:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                              "typeString": "function (int256,int256) pure returns (int256)"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1758:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 88,
                        "id": 113,
                        "nodeType": "Return",
                        "src": "1751:67:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Updates the current funds token balance \nand returns the difference of new and previous funds token balances\n@return A int256 representing the difference of the new and previous funds token balance",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateFundsTokenBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1544:2:0"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1565:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1564:8:0"
            },
            "scope": 195,
            "src": "1511:493:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "2389:132:0",
              "statements": [
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "name": "newFunds",
                      "nodeType": "VariableDeclaration",
                      "scope": 153,
                      "src": "2394:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2394:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 141,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 139,
                      "name": "_updateFundsTokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2412:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_int256_$",
                        "typeString": "function () returns (int256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2412:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2394:44:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 142,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "2449:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2460:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2449:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 152,
                  "nodeType": "IfStatement",
                  "src": "2445:72:0",
                  "trueBody": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "2463:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 146,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138,
                                  "src": "2486:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toUint256Safe",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1204,
                                "src": "2486:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$bound_to$_t_int256_$",
                                  "typeString": "function (int256) pure returns (uint256)"
                                }
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2486:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 145,
                            "name": "_distributeFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "2469:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2469:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "2469:42:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Register a payment of funds in tokens. May be called directly after a deposit is made.\n@dev Calls _updateFundsTokenBalance(), whereby the contract computes the delta of the previous and the new \nfunds token balance and increments the total received funds (cumulative) by delta by calling _registerFunds()",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateFundsReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:2:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:0:0"
            },
            "scope": 195,
            "src": "2349:172:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "2898:211:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 160,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1864,
                                "src": "2932:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2932:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 163,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
<<<<<<< HEAD
                                  "referencedDeclaration": 1834,
=======
                                  "referencedDeclaration": 1903,
>>>>>>> origin/master
                                  "src": "2952:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                    "typeString": "contract FDT_ERC20Extension"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                    "typeString": "contract FDT_ERC20Extension"
                                  }
                                ],
                                "id": 162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2944:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2944:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 158,
                              "name": "fundsToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "2911:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1849",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1812,
                            "src": "2911:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2911:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2961:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2911:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1867,
                      "src": "2903:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:60:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 193,
                      "src": "2968:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 174,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "3006:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3006:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 177,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
<<<<<<< HEAD
                            "referencedDeclaration": 1834,
=======
                            "referencedDeclaration": 1903,
>>>>>>> origin/master
                            "src": "3026:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                              "typeString": "contract FDT_ERC20Extension"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                              "typeString": "contract FDT_ERC20Extension"
                            }
                          ],
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3018:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3018:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 172,
                        "name": "fundsToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2985:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1849",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1812,
                      "src": "2985:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:64:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 184,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1864,
                              "src": "3069:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3069:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 187,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
<<<<<<< HEAD
                                "referencedDeclaration": 1834,
=======
                                "referencedDeclaration": 1903,
>>>>>>> origin/master
                                "src": "3089:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                  "typeString": "contract FDT_ERC20Extension"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FDT_ERC20Extension_$195",
                                  "typeString": "contract FDT_ERC20Extension"
                                }
                              ],
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3081:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3081:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "3096:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 182,
                            "name": "fundsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "3045:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1849",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1832,
                          "src": "3045:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3045:58:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1868
                      ],
                      "referencedDeclaration": 1867,
                      "src": "3037:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:67:0"
                }
              ]
            },
            "documentation": "@notice Pay fundsToken to contract\nFront end should call fundsToken contract to approve transfer - https://ethereum.stackexchange.com/questions/57286/make-function-payable-for-a-specific-erc20-token\nhttps://ethereum.stackexchange.com/questions/30527/smart-contract-to-receive-tokens-and-give-ether/30532",
            "id": 194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payToContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2881:2:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2898:0:0"
            },
            "scope": 195,
            "src": "2859:250:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 196,
        "src": "201:2915:0"
      }
    ],
    "src": "0:3116:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1589698063143": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "by",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fundsDistributed",
              "type": "uint256"
            }
          ],
          "name": "FundsDistributed",
          "type": "event"
        },
        "0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "by",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fundsWithdrawn",
              "type": "uint256"
            }
          ],
          "name": "FundsWithdrawn",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x835495281886086b1A92b140661A3303Cd11cc73",
      "transactionHash": "0xd25dc079116ef7946b9cadb6abe5e9f98d49284f26c5ba092b01fa9f7920c091"
    },
    "1589699545841": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "by",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fundsDistributed",
              "type": "uint256"
            }
          ],
          "name": "FundsDistributed",
          "type": "event"
        },
        "0xeaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "by",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "fundsWithdrawn",
              "type": "uint256"
            }
          ],
          "name": "FundsWithdrawn",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
<<<<<<< HEAD
      "address": "0x210DA34a0DC2d9a6338B5eF0601e7Ed4370634E9",
      "transactionHash": "0xeb4046d15f47b0f0417d46d12fd050aa31f0ed61c78602dd8cd78a25c277dec0"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-17T07:17:37.794Z",
  "networkType": "ethereum",
=======
      "address": "0xE4D226E98140854a88a12087d54b1723771fd0Dd",
      "transactionHash": "0x192e86fc04df05f03d204e80732b624670019e0f10b37048e18067f4234f2000"
    },
    "1571586615567": {
      "events": {},
      "links": {},
      "address": "0xE886DEFA080F8B93523dC858D5F733613E8Ef357",
      "transactionHash": "0xeb8cbf6c197151f761225b6ccbb10eacdc3c5df32bbf58127b41b8e5e4a6185c"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-10-20T15:51:35.363Z",
>>>>>>> origin/master
  "devdoc": {
    "methods": {
      "accumulativeFundsOf(address)": {
        "details": "accumulativeFundsOf(_owner) = withdrawableFundsOf(_owner) + withdrawnFundsOf(_owner) = (pointsPerShare * balanceOf(_owner) + pointsCorrection[_owner]) / pointsMultiplier",
        "params": {
          "_owner": "The address of a token holder."
        },
        "return": "The amount of funds that `_owner` has earned in total."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply.\r"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "See {ERC20-_mint}.      * Requirements:      * - the caller must have the {MinterRole}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "updateFundsReceived()": {
        "details": "Calls _updateFundsTokenBalance(), whereby the contract computes the delta of the previous and the new  funds token balance and increments the total received funds (cumulative) by delta by calling _registerFunds()"
      },
      "withdrawableFundsOf(address)": {
        "params": {
          "_owner": "The address of a token holder."
        },
        "return": "The amount funds that `_owner` can withdraw."
      },
      "withdrawnFundsOf(address)": {
        "params": {
          "_owner": "The address of a token holder."
        },
        "return": "The amount of funds that `_owner` has withdrawn."
      }
    }
  },
  "userdoc": {
    "methods": {
      "accumulativeFundsOf(address)": {
        "notice": "prev. accumulativeDividendOfView the amount of funds that an address has earned in total."
      },
      "payToContract()": {
        "notice": "Pay fundsToken to contract Front end should call fundsToken contract to approve transfer - https://ethereum.stackexchange.com/questions/57286/make-function-payable-for-a-specific-erc20-token https://ethereum.stackexchange.com/questions/30527/smart-contract-to-receive-tokens-and-give-ether/30532"
      },
      "updateFundsReceived()": {
        "notice": "Register a payment of funds in tokens. May be called directly after a deposit is made."
      },
      "withdrawFunds()": {
        "notice": "Withdraws available funds for user."
      },
      "withdrawableFundsOf(address)": {
        "notice": "prev. withdrawableDividendOfView the amount of funds that an address can withdraw."
      },
      "withdrawnFundsOf(address)": {
        "notice": "prev. withdrawnDividendOfView the amount of funds that an address has withdrawn."
      }
    }
  }
}